<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 오프라인에서 사용하기 위해서 beans / context의 xsd부분 https => http로 변경 -->

		
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<beans:bean id="uploadFolder" class="java.lang.String">
<!--         <beans:constructor-arg value="classpath:/resources/upload"/> -->
        <beans:constructor-arg value="C:/Users/TG/git/spring/board/src/main/webapp/resources/upload"/>
    </beans:bean>
    
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<context:component-scan base-package="spring.practice.home" />
	
	<beans:bean id="Interceptor" class="spring.practice.home.admin.Interceptor.AuthLoginInterceptor"/>

	<interceptors>
		<interceptor>
			<mapping path="/mngr/**"/>
			<exclude-mapping path="/mngr/login"/>
			<exclude-mapping path="/mngr/login.ajax"/>
			<beans:ref bean="Interceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- tiles 설정 -->
<!-- 	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> -->
<!-- 	    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" /> -->
<!-- 	    <beans:property name="order" value="" /> -->
<!-- 	</beans:bean> -->
	 
<!-- 	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> -->
<!-- 	    <beans:property name="definitions"> -->
<!-- 	        <beans:list> -->
<!-- 	            <beans:value>/WEB-INF/spring/tiles-config.xml</beans:value> -->
<!-- 	        </beans:list> -->
<!-- 	    </beans:property> -->
<!-- 	    header.jsp에서 출력되는 동적인 값 사용하려고 추가  -->
<!-- 	    <beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory"/> -->
<!-- 	</beans:bean> -->

</beans:beans>
